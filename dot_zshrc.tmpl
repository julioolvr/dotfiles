# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Uncomment this line and the one at the end of the file to profile initialization
# zmodload zsh/zprof

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH={{- .chezmoi.homeDir }}/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions zsh-syntax-highlighting history-substring-search docker fzf-tab)

# Disable "magic" functions that slow down copy/paste
DISABLE_MAGIC_FUNCTIONS=true

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

rehash

# Mise - tooling version manager
# Using shims to avoid a performance hit on every prompt render (200ms+)
eval "$(mise activate zsh --shims)"

#### Rust
# Setup for Rust's Racer
RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"

export TERM=xterm-256color

# Add Cargo binaries to PATH
export PATH="$PATH:$HOME/.cargo/bin"

# Homebrew uses $HOME/go to install Go packages, add it to the path
export PATH="$PATH:$HOME/go/bin"

# Add own scripts and stuff to PATH
export PATH="$PATH:$HOME/bin"

# Add Python3 and other executables to the path
export PATH="$PATH:$HOME/.local/bin"

# Because of macOS reasons
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# Set {{ .editor }} as the default editor for gems
export BUNDLER_EDITOR={{ .editor }}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Use ripgrep with fzf
export FZF_DEFAULT_COMMAND='rg --files --hidden'
_fzf_compgen_path() {
  rg --files --hidden 2>/dev/null
}
_fzf_compgen_dir() {
  rg --hidden --files --null --sort path 2>/dev/null | xargs -0 dirname | uniq
}

# Custom aliases
alias ov=overmind
alias oc="overmind connect"
alias or="overmind restart"
alias be="bundle exec"
alias nr="npm run"
alias ntw="npm test -- --watch"
alias joke="xh -j -b https://icanhazdadjoke.com/ | jq '.joke'"
alias prp="poetry run"
alias ws="windsurf"
## Default code editor
alias c="{{ .editor }}"
## Replace ls with eza and add some convenient shortcuts
export EZA_ICONS_AUTO=true
alias e="eza --group-directories-first"
alias el="eza -l --group-directories-first"
alias ls=e
alias ll=el

# Use nvim as default non-visual editor
export EDITOR=nvim
# Use {{ .editor }} as the default visual editor
export VISUAL={{ .editor }}

# If it exists, source a private zshrc file that's not in source control
if [ -f ~/.zshrc.private ]; then
  source ~/.zshrc.private
fi

# Fuzzy git checkout
fzf-git-branch() {
  git rev-parse HEAD > /dev/null 2>&1 || return

  git branch --color=always --sort=-committerdate |
    grep -v HEAD |
    fzf --height 50% --ansi --no-multi --preview-window right:65% \
        --preview 'git log -n 50 --color=always --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed "s/.* //" <<< {})' |
    sed "s/.* //"
}

fzf-git-checkout() {
  git rev-parse HEAD > /dev/null 2>&1 || return

  local branch

  branch=$(fzf-git-branch)
  if [[ "$branch" = "" ]]; then
      echo "No branch selected."
      return
  fi

  # If branch name starts with 'remotes/' then it is a remote branch. By
  # using --track and a remote branch name, it is the same as:
  # git checkout -b branchName --track origin/branchName
  if [[ "$branch" = 'remotes/'* ]]; then
      git checkout --track $branch
  else
      git checkout $branch;
  fi
}

alias gb='fzf-git-branch'
alias gco='fzf-git-checkout'

eval "$(zoxide init zsh)"

# Load fzf-git
source ~/.dot/fzf-git.sh

autoload -U compinit; compinit

# fzf-tab config
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# custom fzf flags
# NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
# zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Uncomment this line and the one at the top of the file to profile initialization
# zprof
